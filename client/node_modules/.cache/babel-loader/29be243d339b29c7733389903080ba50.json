{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asmz0\\\\Documents\\\\GitHub\\\\airbnb-explorer\\\\client\\\\src\\\\components\\\\Host.js\";\nimport React from 'react';\nimport PageNavbar from './PageNavbar';\nimport ListingRow from './ListingRow';\nimport '../style/Zipcode.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class Host extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hostId: \"\",\n      allHosts: [],\n      listings: []\n    };\n    this.submitHostId = this.submitHostId.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  /* ---- Q3a (Best Genres) ---- */\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:8081/getHost\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(hostList => {\n      // Map each attribute of a person in this.state.people to an HTML element\n      let hostDivs = hostList.map((host, i) => [/*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: host.id\n      }, host.id)]); // Set the state of the person list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        allHosts: hostDivs\n      });\n    }).catch(err => console.log(err));\n  }\n\n  handleChange(e) {\n    this.setState({\n      hostId: e.target.value\n    });\n  }\n\n  submitHostId(host_id) {\n    //console.log(this.state.hostId);\n    fetch(\"http://localhost:8081/getHost/\" + host_id, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(hostList => {\n      console.log(hostList); // Map each attribute of a person in this.state.people to an HTML element\n\n      let hostDivs = hostList.map((host, i) => /*#__PURE__*/React.createElement(ListingRow, {\n        key: i,\n        listing_id: host.listing_id,\n        price: host.price,\n        summary: host.summary\n      }));\n      console.log(hostDivs); // Set the state of the person list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        listings: hostDivs\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Zipcode\"\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"host\"\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container bestgenres-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\"\n    }, \"Get Host's Listings\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"years-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-container\"\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.submitHostId,\n      onChange: this.handleChange,\n      className: \"dropdown\",\n      id: \"zipcodesDropdown\"\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      select: true,\n      value: true\n    }, \" -- select an option -- \"), this.state.allHosts), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-btn\",\n      id: \"zipcodesSubmitBtn\",\n      onClick: this.submitHostId\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hosts-container\"\n    }, /*#__PURE__*/React.createElement(\"table\", null, /*#__PURE__*/React.createElement(\"tr\", null, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Listing_ID\")), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Price\")), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Summary\"))), this.state.listings)))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/asmz0/Documents/GitHub/airbnb-explorer/client/src/components/Host.js"],"names":["React","PageNavbar","ListingRow","Host","Component","constructor","props","state","hostId","allHosts","listings","submitHostId","bind","handleChange","componentDidMount","fetch","method","then","res","json","hostList","hostDivs","map","host","i","id","setState","catch","err","console","log","e","target","value","host_id","listing_id","price","summary","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PageNavbar from './PageNavbar';\r\nimport ListingRow from './ListingRow';\r\nimport '../style/Zipcode.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class Host extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\thostId: \"\",\r\n\t\t\tallHosts: [],\r\n\t\t\tlistings: []\r\n\t\t};\r\n\r\n\t\tthis.submitHostId = this.submitHostId.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\r\n\t/* ---- Q3a (Best Genres) ---- */\r\n\tcomponentDidMount() {\r\n\t\tfetch(\"http://localhost:8081/getHost\", {\r\n      method: 'GET' // The type of HTTP request.\r\n    })\r\n      .then(res => res.json()) // Convert the response data to a JSON.\r\n      .then(hostList => {\r\n\r\n        // Map each attribute of a person in this.state.people to an HTML element\r\n        let hostDivs = hostList.map((host, i) => \r\n\t\t[<option key={i} value={host.id}>{host.id}</option>]\r\n\r\n        );\r\n        // Set the state of the person list to the value returned by the HTTP response from the server.\r\n        this.setState({\r\n          allHosts: hostDivs,\r\n        })\r\n      \r\n      })\r\n      .catch(err => console.log(err))\r\n    \r\n\t}\r\n\r\n\thandleChange(e) {\r\n\t\tthis.setState({\r\n\t\t\thostId: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\tsubmitHostId(host_id) {\r\n\t\t//console.log(this.state.hostId);\r\n\t\tfetch(\"http://localhost:8081/getHost/\" + host_id, {\r\n      method: 'GET' // The type of HTTP request.\r\n    })\r\n      .then(res => res.json()) // Convert the response data to a JSON.\r\n      .then(hostList => {\r\n        console.log(hostList);\r\n\r\n        // Map each attribute of a person in this.state.people to an HTML element\r\n        let hostDivs = hostList.map((host, i) => \r\n          <ListingRow key={i} listing_id={host.listing_id} price={host.price} summary={host.summary}\r\n          />\r\n\r\n        );\r\n        console.log(hostDivs);\r\n        // Set the state of the person list to the value returned by the HTTP response from the server.\r\n        this.setState({\r\n          listings: hostDivs,\r\n        })\r\n      \r\n      })\r\n      .catch(err => console.log(err))\r\n    \r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Zipcode\">\r\n\t\t\t\t<PageNavbar active=\"host\" />\r\n\r\n\t\t\t\t<div className=\"container bestgenres-container\">\r\n\t\t\t      <div className=\"jumbotron\">\r\n\t\t\t        <div className=\"h5\">Get Host's Listings</div>\r\n\r\n\t\t\t        <div className=\"years-container\">\r\n\t\t\t          <div className=\"dropdown-container\">\r\n\t\t\t            <select value={this.state.submitHostId} onChange={this.handleChange} className=\"dropdown\" id=\"zipcodesDropdown\">\r\n\t\t\t            \t<option select value> -- select an option -- </option>\r\n\t\t\t            \t{this.state.allHosts}\r\n\t\t\t            </select>\r\n\t\t\t            <button className=\"submit-btn\" id=\"zipcodesSubmitBtn\" onClick={this.submitHostId}>Submit</button>\r\n\t\t\t          </div>\r\n\t\t\t        </div>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"jumbotron\">\r\n\t\t\t        <div className=\"hosts-container\">\r\n\t\t\t\t\t\t  <table>\r\n\t\t\t\t\t\t\t  <tr>\r\n\t\t\t\t\t\t\t  <th className=\"header\"><strong>Listing_ID</strong></th>\r\n                        \t<th className=\"header\"><strong>Price</strong></th>\r\n\t\t\t            \t<th className=\"header\"><strong>Summary</strong></th>\r\n\t\t\t\t\t\t\t  </tr>\r\n\t\t\t\t\t\t\t  {this.state.listings}\r\n\t\t\t\t\t\t  </table>\r\n\t\t\t        </div>\r\n\t\t\t      </div>\r\n\t\t\t    </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}