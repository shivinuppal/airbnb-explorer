{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asmz0\\\\Documents\\\\GitHub\\\\airbnb-explorer\\\\client\\\\src\\\\components\\\\Analytics.js\";\nimport React from 'react';\nimport '../style/Analytics.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport AnalyticsRow from './AnalyticsRow';\nimport AnnualRevenuesRow from './AnnualRevenuesRow';\nimport ApartmentsRow from './ApartmentsRow';\nimport MaxListingsRow from './MaxListingsRow';\nimport HostsRow from './HostsRow';\nexport default class Analytics extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of analytics for a specified genre.\n\n    this.state = {\n      zips: [],\n      annualRevs: [],\n      apartments: [],\n      maxListings: [],\n      hosts: []\n    };\n    this.showAveragePricePerZipcode = this.showAveragePricePerZipcode.bind(this);\n    this.showAnnualRevenues = this.showAnnualRevenues.bind(this);\n    this.showApartments = this.showApartments.bind(this);\n    this.showMaxListings = this.showMaxListings.bind(this);\n    this.showBestHosts = this.showBestHosts.bind(this);\n  } // React function that is called when the page load.\n\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    this.showAveragePricePerZipcode();\n    this.showAnnualRevenues();\n    this.showApartments();\n    this.showMaxListings();\n    this.showBestHosts();\n    this.render();\n  }\n\n  showAveragePricePerZipcode() {\n    fetch(\"http://localhost:8081/getAvgPricePerZipcode\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(zipsList => {\n      //console.log(zipsList);\n      let zipsDivs = zipsList.map((zip, i) => /*#__PURE__*/React.createElement(AnalyticsRow, {\n        key: i,\n        zipcode: zip[0],\n        avgprice: \"$\" + zip[1]\n      }));\n      this.setState({\n        zips: zipsDivs\n      });\n    }).catch(err => console.log(err));\n  } //annual revenues\n\n\n  showAnnualRevenues() {\n    fetch(\"http://localhost:8081/getAnnualRevenues\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(revsList => {\n      //console.log(revsList);\n      let revsDivs = revsList.map((rev, i) => /*#__PURE__*/React.createElement(AnnualRevenuesRow, {\n        key: i,\n        listing: rev[0],\n        annualrev: rev[1]\n      }));\n      this.setState({\n        annualRevs: revsDivs\n      });\n    }).catch(err => console.log(err));\n  } //annual revenues\n\n\n  showApartments() {\n    fetch(\"http://localhost:8081/getApartments\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(apartmentsList => {\n      //console.log(apartmentsList);\n      let apartmentsDivs = apartmentsList.map((apartment, i) => /*#__PURE__*/React.createElement(ApartmentsRow, {\n        key: i,\n        listing: apartment[0],\n        guests: apartment[1],\n        price: \"$\" + apartment[2],\n        max_nights: apartment[3],\n        min_nights: apartment[4]\n      }));\n      this.setState({\n        apartments: apartmentsDivs\n      });\n    }).catch(err => console.log(err));\n  } //Listings with max(bathrooms, bedrooms, beds)\n\n\n  showMaxListings() {\n    fetch(\"http://localhost:8081/getMaxListings\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(maxListingsList => {\n      //console.log(maxListingsList);\n      let maxListingsDivs = maxListingsList.map((listing, i) => /*#__PURE__*/React.createElement(MaxListingsRow, {\n        key: i,\n        listing: listing[0],\n        price: \"$\" + listing[1],\n        bathrooms: listing[2],\n        bedrooms: listing[3],\n        beds: listing[4]\n      }));\n      this.setState({\n        maxListings: maxListingsDivs\n      });\n    }).catch(err => console.log(err));\n  } //show best hosts\n\n\n  showBestHosts() {\n    fetch(\"http://localhost:8081/getBestHosts\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(hostsList => {\n      //console.log(hostsList);\n      let hostsDivs = hostsList.map((host, i) => /*#__PURE__*/React.createElement(HostsRow, {\n        key: i,\n        host: host[0],\n        listings: host[1],\n        price: \"$\" + host[2]\n      }));\n      this.setState({\n        hosts: hostsDivs\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Analytics\"\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"analytics\"\n    }), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container analytics-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"analytics-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h2\"\n    }, \"Average Price for each Zipcode\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"analytics-header\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Zipcode\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Average Price\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\"\n    }, this.state.zips))), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"analytics-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h2\"\n    }, \"Listings with the top Annual Revenue per square foot\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"analytics-header\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Listing\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Annual Revenue Per Square Foot\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\"\n    }, this.state.annualRevs))), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"analytics-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h2\"\n    }, \"Find apartments which let you invite tens of people in\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"analytics-header\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Listing\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Guests\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Daily Price\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Max Nights\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Min Nights\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\"\n    }, this.state.apartments))), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"analytics-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h2\"\n    }, \"For the average Joe: \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\"\n    }, \"These have average prices, average beds, average ... \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"analytics-header\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Listing\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Price\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Bathrooms\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Bedrooms\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Beds\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\"\n    }, this.state.maxListings))), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"analytics-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h2\"\n    }, \"Check out these great hosts\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"analytics-header\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Host\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Total Listings\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Average Price\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\"\n    }, this.state.hosts)))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/asmz0/Documents/GitHub/airbnb-explorer/client/src/components/Analytics.js"],"names":["React","PageNavbar","AnalyticsRow","AnnualRevenuesRow","ApartmentsRow","MaxListingsRow","HostsRow","Analytics","Component","constructor","props","state","zips","annualRevs","apartments","maxListings","hosts","showAveragePricePerZipcode","bind","showAnnualRevenues","showApartments","showMaxListings","showBestHosts","componentDidMount","render","fetch","method","then","res","json","zipsList","zipsDivs","map","zip","i","setState","catch","err","console","log","revsList","revsDivs","rev","apartmentsList","apartmentsDivs","apartment","maxListingsList","maxListingsDivs","listing","hostsList","hostsDivs","host"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../style/Analytics.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport PageNavbar from './PageNavbar';\r\nimport AnalyticsRow from './AnalyticsRow';\r\nimport AnnualRevenuesRow from './AnnualRevenuesRow';\r\nimport ApartmentsRow from './ApartmentsRow';\r\nimport MaxListingsRow from './MaxListingsRow';\r\nimport HostsRow from './HostsRow';\r\n\r\nexport default class Analytics extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // The state maintained by this React Component. This component maintains the list of genres,\r\n    // and a list of analytics for a specified genre.\r\n    this.state = {\r\n      zips: [],\r\n      annualRevs: [],\r\n      apartments: [],\r\n      maxListings: [],\r\n      hosts: []\r\n    }\r\n    this.showAveragePricePerZipcode = this.showAveragePricePerZipcode.bind(this);\r\n    this.showAnnualRevenues = this.showAnnualRevenues.bind(this);\r\n    this.showApartments = this.showApartments.bind(this);\r\n    this.showMaxListings = this.showMaxListings.bind(this);\r\n    this.showBestHosts = this.showBestHosts.bind(this);\r\n  }\r\n\r\n  // React function that is called when the page load.\r\n   componentDidMount() {\r\n     // Send an HTTP request to the server.\r\n     this.showAveragePricePerZipcode();\r\n     this.showAnnualRevenues();\r\n     this.showApartments();\r\n     this.showMaxListings();\r\n     this.showBestHosts();\r\n     this.render();\r\n   }\r\n\r\n\r\n  showAveragePricePerZipcode() {\r\n    fetch(\"http://localhost:8081/getAvgPricePerZipcode\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(zipsList => {\r\n        //console.log(zipsList);\r\n        let zipsDivs = zipsList.map((zip, i) =>\r\n          <AnalyticsRow key={i} zipcode={zip[0]} avgprice={\"$\" + zip[1]} />\r\n        );\r\n        this.setState({\r\n          zips: zipsDivs\r\n        });\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  //annual revenues\r\n  showAnnualRevenues() {\r\n    fetch(\"http://localhost:8081/getAnnualRevenues\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(revsList => {\r\n        //console.log(revsList);\r\n        let revsDivs = revsList.map((rev, i) =>\r\n          <AnnualRevenuesRow key={i} listing={rev[0]} annualrev={rev[1]}/>\r\n        );\r\n        this.setState({\r\n          annualRevs: revsDivs\r\n        });\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  //annual revenues\r\n  showApartments() {\r\n    fetch(\"http://localhost:8081/getApartments\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(apartmentsList => {\r\n        //console.log(apartmentsList);\r\n        let apartmentsDivs = apartmentsList.map((apartment, i) =>\r\n          <ApartmentsRow key={i} listing={apartment[0]} guests={apartment[1]}\r\n            price={\"$\" + apartment[2]} max_nights={apartment[3]} min_nights={apartment[4]} />\r\n        );\r\n        this.setState({\r\n          apartments: apartmentsDivs\r\n        });\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  //Listings with max(bathrooms, bedrooms, beds)\r\n  showMaxListings() {\r\n    fetch(\"http://localhost:8081/getMaxListings\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(maxListingsList => {\r\n        //console.log(maxListingsList);\r\n        let maxListingsDivs = maxListingsList.map((listing, i) =>\r\n          <MaxListingsRow key={i} listing={listing[0]} price={\"$\" + listing[1]}\r\n            bathrooms={listing[2]} bedrooms={listing[3]} beds={listing[4]} />\r\n        );\r\n        this.setState({\r\n          maxListings: maxListingsDivs\r\n        });\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  //show best hosts\r\n  showBestHosts() {\r\n    fetch(\"http://localhost:8081/getBestHosts\", {\r\n      method: \"GET\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(hostsList => {\r\n        //console.log(hostsList);\r\n        let hostsDivs = hostsList.map((host, i) =>\r\n          <HostsRow key={i} host={host[0]} listings={host[1]}\r\n            price={\"$\" + host[2]} />\r\n        );\r\n        this.setState({\r\n          hosts: hostsDivs\r\n        });\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Analytics\">\r\n\r\n        <PageNavbar active=\"analytics\" />\r\n\r\n        <br></br>\r\n        <div className=\"container analytics-container\">\r\n\r\n          <div className=\"jumbotron\">\r\n            <div className=\"analytics-container\">\r\n            <div className= \"h2\">Average Price for each Zipcode</div>\r\n              <div className=\"analytics-header\">\r\n                <div className=\"header\"><strong>Zipcode</strong></div>\r\n                <div className=\"header\"><strong>Average Price</strong></div>\r\n              </div>\r\n              <div className=\"results-container\" id=\"results\">\r\n                {this.state.zips}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <br></br>\r\n          <div className=\"jumbotron\">\r\n            <div className=\"analytics-container\">\r\n            <div className= \"h2\">Listings with the top Annual Revenue per square foot</div>\r\n              <div className=\"analytics-header\">\r\n                <div className=\"header\"><strong>Listing</strong></div>\r\n                <div className=\"header\"><strong>Annual Revenue Per Square Foot</strong></div>\r\n              </div>\r\n              <div className=\"results-container\" id=\"results\">\r\n                {this.state.annualRevs}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br></br>\r\n          <div className=\"jumbotron\">\r\n            <div className=\"analytics-container\">\r\n            <div className= \"h2\">Find apartments which let you invite tens of people in</div>\r\n              <div className=\"analytics-header\">\r\n                <div className=\"header\"><strong>Listing</strong></div>\r\n                <div className=\"header\"><strong>Guests</strong></div>\r\n                <div className=\"header\"><strong>Daily Price</strong></div>\r\n                <div className=\"header\"><strong>Max Nights</strong></div>\r\n                <div className=\"header\"><strong>Min Nights</strong></div>\r\n              </div>\r\n              <div className=\"results-container\" id=\"results\">\r\n                {this.state.apartments}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <br></br>\r\n          <div className=\"jumbotron\">\r\n            <div className=\"analytics-container\">\r\n            <div className= \"h2\">For the average Joe: </div>\r\n            <div className= \"h5\">These have average prices, average beds, average ... </div>\r\n              <div className=\"analytics-header\">\r\n                <div className=\"header\"><strong>Listing</strong></div>\r\n                <div className=\"header\"><strong>Price</strong></div>\r\n                <div className=\"header\"><strong>Bathrooms</strong></div>\r\n                <div className=\"header\"><strong>Bedrooms</strong></div>\r\n                <div className=\"header\"><strong>Beds</strong></div>\r\n              </div>\r\n              <div className=\"results-container\" id=\"results\">\r\n                {this.state.maxListings}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <br></br>\r\n          <div className=\"jumbotron\">\r\n            <div className=\"analytics-container\">\r\n              <div className= \"h2\">Check out these great hosts</div>\r\n              <div className=\"analytics-header\">\r\n                <div className=\"header\"><strong>Host</strong></div>\r\n                <div className=\"header\"><strong>Total Listings</strong></div>\r\n                <div className=\"header\"><strong>Average Price</strong></div>\r\n              </div>\r\n              <div className=\"results-container\" id=\"results\">\r\n                {this.state.hosts}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}