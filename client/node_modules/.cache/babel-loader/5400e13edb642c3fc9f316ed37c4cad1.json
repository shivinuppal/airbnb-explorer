{"ast":null,"code":"var _jsxFileName = \"/Users/mirriamronoh/Documents/GitHub/airbnb-explorer/client/src/components/Analytics.js\";\nimport React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport AnalyticsRow from './AnalyticsRow';\nimport AnnualRevenuesRow from './AnnualRevenuesRow';\nimport ApartmentsRow from './ApartmentsRow';\nexport default class Analytics extends React.Component {\n  constructor(props) {\n    super(props); // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n\n    this.state = {\n      zips: [],\n      annualRevs: []\n    };\n    this.showAveragePricePerZipcode = this.showAveragePricePerZipcode.bind(this);\n    this.showAnnualRevenues = this.showAnnualRevenues.bind(this);\n  }\n  /* ---- Q1b (Dashboard) ---- */\n\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n\n\n  showAveragePricePerZipcode() {\n    fetch(\"http://localhost:8081/getAvgPricePerZipcode\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(zipsList => {\n      console.log(zipsList);\n      let zipsDivs = zipsList.map((zip, i) => /*#__PURE__*/React.createElement(AnalyticsRow, {\n        key: i,\n        zipcode: zip[0],\n        avgprice: zip[1]\n      }));\n      this.setState({\n        zips: zipsDivs\n      });\n    }).catch(err => console.log(err));\n  } //annual revenues\n\n\n  showAnnualRevenues() {\n    fetch(\"http://localhost:8081/getAnnualRevenues\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(revsList => {\n      console.log(revsList);\n      let revsDivs = revsList.map((rev, i) => /*#__PURE__*/React.createElement(AnnualRevenuesRow, {\n        key: i,\n        listing: rev[0],\n        annualrev: rev[1],\n        area: rev[2]\n      }));\n      this.setState({\n        annualRevs: revsDivs\n      });\n    }).catch(err => console.log(err));\n  } //annual revenues\n\n\n  showApartments() {\n    fetch(\"http://localhost:8081/getApartments\", {\n      method: \"GET\"\n    }).then(res => res.json()).then(revsList => {\n      console.log(revsList);\n      let revsDivs = revsList.map((rev, i) => /*#__PURE__*/React.createElement(AnnualRevenuesRow, {\n        key: i,\n        listing: rev[0],\n        annualrev: rev[1],\n        area: rev[2]\n      }));\n      this.setState({\n        annualRevs: revsDivs\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Analytics\"\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"analytics\"\n    }), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container movies-container\"\n    }, /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container\"\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"ZipsBtn\",\n      className: \"submit-btn\",\n      onClick: this.showAveragePricePerZipcode()\n    }, \"Average Price Per ZipCode\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-header\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Zipcode\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Average Price\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\"\n    }, this.state.zips))), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container\"\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"RevsBtn\",\n      className: \"submit-btn\",\n      onClick: this.showAnnualRevenues()\n    }, \"Annual Revenues\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-header\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Listing\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Annual Revenue\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\"\n    }, /*#__PURE__*/React.createElement(\"strong\", null, \"Listing Area\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"results-container\",\n      id: \"results\"\n    }, this.state.zips)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/mirriamronoh/Documents/GitHub/airbnb-explorer/client/src/components/Analytics.js"],"names":["React","PageNavbar","AnalyticsRow","AnnualRevenuesRow","ApartmentsRow","Analytics","Component","constructor","props","state","zips","annualRevs","showAveragePricePerZipcode","bind","showAnnualRevenues","fetch","method","then","res","json","zipsList","console","log","zipsDivs","map","zip","i","setState","catch","err","revsList","revsDivs","rev","showApartments","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../style/Dashboard.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport AnalyticsRow from './AnalyticsRow';\nimport AnnualRevenuesRow from './AnnualRevenuesRow';\nimport ApartmentsRow from './ApartmentsRow';\n\nexport default class Analytics extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // The state maintained by this React Component. This component maintains the list of genres,\n    // and a list of movies for a specified genre.\n    this.state = {\n      zips: [],\n      annualRevs: []\n    }\n    this.showAveragePricePerZipcode = this.showAveragePricePerZipcode.bind(this);\n    this.showAnnualRevenues = this.showAnnualRevenues.bind(this)\n  }\n\n  /* ---- Q1b (Dashboard) ---- */\n  /* Set this.state.movies to a list of <DashboardMovieRow />'s. */\n  showAveragePricePerZipcode() {\n    fetch(\"http://localhost:8081/getAvgPricePerZipcode\", {\n\t\t\tmethod: \"GET\"\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(zipsList => {\n\t\t\t\tconsole.log(zipsList);\n\t\t\t\tlet zipsDivs = zipsList.map((zip, i) =>\n        <AnalyticsRow key={i} zipcode={zip[0]} avgprice={zip[1]}/>\n        );\n          this.setState({\n            zips: zipsDivs\n          });\n        })\n        .catch(err => console.log(err))\n    }\n\n    //annual revenues\n    showAnnualRevenues() {\n        fetch(\"http://localhost:8081/getAnnualRevenues\", {\n\t\t\tmethod: \"GET\"\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(revsList => {\n\t\t\t\tconsole.log(revsList);\n\t\t\t\tlet revsDivs = revsList.map((rev, i) =>\n        <AnnualRevenuesRow key={i} listing={rev[0]} annualrev={rev[1]} \n        area={rev[2]}/>\n        );\n          this.setState({\n            annualRevs: revsDivs\n          });\n        })\n        .catch(err => console.log(err))\n    }\n\n   //annual revenues\n   showApartments() {\n    fetch(\"http://localhost:8081/getApartments\", {\n        method: \"GET\"\n    })\n        .then(res => res.json())\n        .then(revsList => {\n            console.log(revsList);\n            let revsDivs = revsList.map((rev, i) =>\n    <AnnualRevenuesRow key={i} listing={rev[0]} annualrev={rev[1]} \n    area={rev[2]}/>\n    );\n      this.setState({\n        annualRevs: revsDivs\n      });\n    })\n    .catch(err => console.log(err))\n}\n\n\n  render() {\n    return (\n      <div className=\"Analytics\">\n\n        <PageNavbar active=\"analytics\" />\n\n        <br></br>\n        <div className=\"container movies-container\">\n\n          <br></br>\n          <div className=\"input-container\">\n\t\t\t<button id=\"ZipsBtn\" className=\"submit-btn\" onClick={this.showAveragePricePerZipcode()}>Average Price Per ZipCode</button>\n\t\t  </div>\n          <div className=\"jumbotron\">\n            <div className=\"movies-container\">\n              <div className=\"movies-header\">\n                <div className=\"header\"><strong>Zipcode</strong></div>\n                <div className=\"header\"><strong>Average Price</strong></div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n                {this.state.zips}\n              </div>\n            </div>\n          </div>\n          <br></br>\n          <div className=\"input-container\">\n\t\t\t<button id=\"RevsBtn\" className=\"submit-btn\" onClick={this.showAnnualRevenues()}>Annual Revenues</button>\n\t\t  </div>\n          <div className=\"jumbotron\">\n            <div className=\"movies-container\">\n              <div className=\"movies-header\">\n                <div className=\"header\"><strong>Listing</strong></div>\n                <div className=\"header\"><strong>Annual Revenue</strong></div>\n                <div className=\"header\"><strong>Listing Area</strong></div>\n              </div>\n              <div className=\"results-container\" id=\"results\">\n                {this.state.zips}\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}