{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asmz0\\\\Documents\\\\GitHub\\\\airbnb-explorer\\\\client\\\\src\\\\components\\\\Host.js\";\nimport React from 'react';\nimport PageNavbar from './PageNavbar';\nimport ZipcodeRow from './ZipcodeRow';\nimport '../style/Zipcode.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class Host extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedZipcode: \"0\",\n      zipcodeList: [/*#__PURE__*/React.createElement(\"option\", {\n        value: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 18\n        }\n      }, \"\\\"l\\\"\")],\n      genres: []\n    };\n    this.submitZipcode = this.submitZipcode.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  /* ---- Q3a (Best Genres) ---- */\n\n\n  componentDidMount() {\n    fetch(\"http://localhost:8081/getHost\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(zipcodeList => {\n      console.log(\"a\"); // Map each attribute of a person in this.state.people to an HTML element\n\n      let zipcodeDivs = zipcodeList.map((zipcode, i) => [/*#__PURE__*/React.createElement(\"option\", {\n        value: zipcode.zipcode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 4\n        }\n      }, zipcode.zipcode)]); // Set the state of the person list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        zipcodeList: zipcodeDivs\n      });\n    }).catch(err => console.log(err));\n  }\n\n  handleChange(e) {\n    this.setState({\n      selectedZipcode: e.target.value\n    });\n  }\n  /* ---- Q3b (Best Genres) ---- */\n\n\n  submitZipcode() {\n    fetch(\"http://localhost:8081/getHost/\" + this.state.selectedZipcode, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(zipcodeList => {\n      console.log(\"a\"); // Map each attribute of a person in this.state.people to an HTML element\n\n      let zipcodeDivs = zipcodeList.map((zipcode, i) => /*#__PURE__*/React.createElement(ZipcodeRow, {\n        id: \"row-\" + zipcode.listing_id + zipcode.zipcode,\n        listing_id: zipcode.listing_id,\n        zipcode: zipcode.zipcode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }));\n      console.log(zipcodeDivs); // Set the state of the person list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        genres: zipcodeDivs\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Zipcode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"zipcode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container bestgenres-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 12\n      }\n    }, \"Zipcode\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"years-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.selectedZipcode,\n      onChange: this.handleChange,\n      className: \"dropdown\",\n      id: \"zipcodesDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      select: true,\n      value: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \" -- select an option -- \"), this.state.zipcodeList), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-btn\",\n      id: \"zipcodesSubmitBtn\",\n      onClick: this.submitZipcode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 16\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 40\n      }\n    }, \"Listing ID\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 40\n      }\n    }, \"Street\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movies-container\",\n      id: \"results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 14\n      }\n    }, this.state.genres)))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/asmz0/Documents/GitHub/airbnb-explorer/client/src/components/Host.js"],"names":["React","PageNavbar","ZipcodeRow","Host","Component","constructor","props","state","selectedZipcode","zipcodeList","genres","submitZipcode","bind","handleChange","componentDidMount","fetch","method","then","res","json","console","log","zipcodeDivs","map","zipcode","i","setState","catch","err","e","target","value","listing_id","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PageNavbar from './PageNavbar';\r\nimport ZipcodeRow from './ZipcodeRow';\r\nimport '../style/Zipcode.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class Host extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tselectedZipcode: \"0\",\r\n\t\t\tzipcodeList: [<option value={2}>\"l\"</option>],\r\n\t\t\tgenres: []\r\n\t\t};\r\n\r\n\t\tthis.submitZipcode = this.submitZipcode.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\r\n\t/* ---- Q3a (Best Genres) ---- */\r\n\tcomponentDidMount() {\r\n\t\tfetch(\"http://localhost:8081/getHost\", {\r\n      method: 'GET' // The type of HTTP request.\r\n    })\r\n      .then(res => res.json()) // Convert the response data to a JSON.\r\n      .then(zipcodeList => {\r\n        console.log(\"a\");\r\n\r\n\r\n        // Map each attribute of a person in this.state.people to an HTML element\r\n        let zipcodeDivs = zipcodeList.map((zipcode, i) => \r\n\t\t[<option value={zipcode.zipcode}>{zipcode.zipcode}</option>]\r\n\r\n        );\r\n        // Set the state of the person list to the value returned by the HTTP response from the server.\r\n        this.setState({\r\n          zipcodeList: zipcodeDivs,\r\n        })\r\n      \r\n      })\r\n      .catch(err => console.log(err))\r\n    \r\n\t}\r\n\r\n\thandleChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tselectedZipcode: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\t/* ---- Q3b (Best Genres) ---- */\r\n\tsubmitZipcode() {\r\n\t\tfetch(\"http://localhost:8081/getHost/\"+this.state.selectedZipcode, {\r\n      method: 'GET' // The type of HTTP request.\r\n    })\r\n      .then(res => res.json()) // Convert the response data to a JSON.\r\n      .then(zipcodeList => {\r\n        console.log(\"a\");\r\n\r\n\r\n        // Map each attribute of a person in this.state.people to an HTML element\r\n        let zipcodeDivs = zipcodeList.map((zipcode, i) => \r\n          <ZipcodeRow id={\"row-\" + zipcode.listing_id + zipcode.zipcode} listing_id={zipcode.listing_id} zipcode={zipcode.zipcode}\r\n          />\r\n\r\n        );\r\n        console.log(zipcodeDivs);\r\n        // Set the state of the person list to the value returned by the HTTP response from the server.\r\n        this.setState({\r\n          genres: zipcodeDivs,\r\n        })\r\n      \r\n      })\r\n      .catch(err => console.log(err))\r\n    \r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"Zipcode\">\r\n\t\t\t\t<PageNavbar active=\"zipcode\" />\r\n\r\n\t\t\t\t<div className=\"container bestgenres-container\">\r\n\t\t\t      <div className=\"jumbotron\">\r\n\t\t\t        <div className=\"h5\">Zipcode</div>\r\n\r\n\t\t\t        <div className=\"years-container\">\r\n\t\t\t          <div className=\"dropdown-container\">\r\n\t\t\t            <select value={this.state.selectedZipcode} onChange={this.handleChange} className=\"dropdown\" id=\"zipcodesDropdown\">\r\n\t\t\t            \t<option select value> -- select an option -- </option>\r\n\t\t\t            \t{this.state.zipcodeList}\r\n\t\t\t            </select>\r\n\t\t\t            <button className=\"submit-btn\" id=\"zipcodesSubmitBtn\" onClick={this.submitZipcode}>Submit</button>\r\n\t\t\t          </div>\r\n\t\t\t        </div>\r\n\t\t\t      </div>\r\n\t\t\t      <div className=\"jumbotron\">\r\n\t\t\t        <div className=\"movies-container\">\r\n\t\t\t          <div className=\"movie\">\r\n\t\t\t            <div className=\"header\"><strong>Listing ID</strong></div>\r\n\t\t\t            <div className=\"header\"><strong>Street</strong></div>\r\n\t\t\t          </div>\r\n\t\t\t          <div className=\"movies-container\" id=\"results\">\r\n\t\t\t            {this.state.genres}\r\n\t\t\t          </div>\r\n\t\t\t        </div>\r\n\t\t\t      </div>\r\n\t\t\t    </div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}