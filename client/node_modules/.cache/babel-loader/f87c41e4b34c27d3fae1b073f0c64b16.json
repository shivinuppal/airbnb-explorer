{"ast":null,"code":"var _jsxFileName = \"/Users/durgasrivatsan/Documents/UPENN/Junior Fall/CIS 550/airbnb-explorer/client/src/components/Host.js\";\nimport React from 'react';\nimport PageNavbar from './PageNavbar';\nimport ListingRow from './ListingRow';\nimport '../style/Zipcode.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class Host extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hostId: this.props.match.params.hostId,\n      allHosts: [],\n      listings: []\n    };\n    this.submitHostId = this.submitHostId.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  /* ---- Q3a (Best Genres) ---- \n  submitHostId() {\n  \tfetch(\"http://localhost:8081/getHost\", {\n       method: 'GET' // The type of HTTP request.\n     })\n       .then(res => res.json()) // Convert the response data to a JSON.\n       .then(hostList => {\n          // Map each attribute of a person in this.state.people to an HTML element\n         let hostDivs = hostList.map((host, i) => \n  \t[<option key={i} value={host.id}>{host.id}</option>]\n          );\n         // Set the state of the person list to the value returned by the HTTP response from the server.\n         this.setState({\n           allHosts: hostDivs,\n         })\n       \n       })\n       .catch(err => console.log(err))\n     \n  } */\n\n\n  handleChange(e) {\n    this.setState({\n      hostId: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:8081/getHost/\" + this.state.hostId, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(hostList => {\n      console.log(hostList); // Map each attribute of a person in this.state.people to an HTML element\n\n      let listingDivs = hostList.map((host, i) => /*#__PURE__*/React.createElement(ListingRow, {\n        key: i,\n        listing_id: host[0],\n        price: host[1],\n        summary: host[2],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 5\n        }\n      }));\n      console.log(listingDivs); // Set the state of the person list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        listings: listingDivs\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Host\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"host\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container hosts-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hosts-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 34\n      }\n    }, \"Listing_ID\")), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 51\n      }\n    }, \"Price\")), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 42\n      }\n    }, \"Summary\")))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 10\n      }\n    }, this.state.listings))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/durgasrivatsan/Documents/UPENN/Junior Fall/CIS 550/airbnb-explorer/client/src/components/Host.js"],"names":["React","PageNavbar","ListingRow","Host","Component","constructor","props","state","hostId","match","params","allHosts","listings","submitHostId","bind","handleChange","e","setState","target","value","componentDidMount","fetch","method","then","res","json","hostList","console","log","listingDivs","map","host","i","catch","err","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PageNavbar from './PageNavbar';\nimport ListingRow from './ListingRow';\nimport '../style/Zipcode.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nexport default class Host extends React.Component {\n\tconstructor(props) { \n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thostId: this.props.match.params.hostId,\n\t\t\tallHosts: [],\n\t\t\tlistings: []\n\t\t};\n\n\t\tthis.submitHostId = this.submitHostId.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\t/* ---- Q3a (Best Genres) ---- \n\tsubmitHostId() {\n\t\tfetch(\"http://localhost:8081/getHost\", {\n      method: 'GET' // The type of HTTP request.\n    })\n      .then(res => res.json()) // Convert the response data to a JSON.\n      .then(hostList => {\n\n        // Map each attribute of a person in this.state.people to an HTML element\n        let hostDivs = hostList.map((host, i) => \n\t\t[<option key={i} value={host.id}>{host.id}</option>]\n\n        );\n        // Set the state of the person list to the value returned by the HTTP response from the server.\n        this.setState({\n          allHosts: hostDivs,\n        })\n      \n      })\n      .catch(err => console.log(err))\n    \n\t} */\n\n\thandleChange(e) {\n\t\tthis.setState({\n\t\t\thostId: e.target.value\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch(\"http://localhost:8081/getHost/\" + this.state.hostId, {\n\t  method: 'GET' // The type of HTTP request.\n\t})\n\t  .then(res => res.json()) // Convert the response data to a JSON.\n\t  .then(hostList => {\n\t\tconsole.log(hostList);\n\t\n\t\t// Map each attribute of a person in this.state.people to an HTML element\n\t\tlet listingDivs = hostList.map((host, i) => \n\t\t  <ListingRow key={i} listing_id={host[0]} price={host[1]} summary={host[2]}\n\t\t  />\n\t\n\t\t);\n\t\tconsole.log(listingDivs);\n\t\t// Set the state of the person list to the value returned by the HTTP response from the server.\n\t\tthis.setState({\n\t\t  listings: listingDivs\n\t\t})\n\t  })\n\t  .catch(err => console.log(err))\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"Host\">\n\t\t\t\t<PageNavbar active=\"host\" />\n\n\t\t\t\t<div className=\"container hosts-container\">\n\t\t\t      <div className=\"jumbotron\">\n\t\t\t        <div className=\"hosts-container\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t  <table>\n\t\t\t\t\t\t\t  <thead>\n\t\t\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t\t  <th className=\"header\"><strong>Listing_ID</strong></th>\n                        \t\t\t<th className=\"header\"><strong>Price</strong></th>\n\t\t\t            \t\t\t<th className=\"header\"><strong>Summary</strong></th>\n\t\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t\t  </thead>\n\t\t\t\t\t\t\t  <tbody> \n\t\t\t\t\t\t\t  {this.state.listings}\n\t\t\t\t\t\t\t  </tbody>\n\t\t\t\t\t\t  </table>\n\t\t\t        </div>\n\t\t\t      </div>\n\t\t\t    </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}