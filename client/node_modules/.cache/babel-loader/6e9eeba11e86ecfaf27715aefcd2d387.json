{"ast":null,"code":"var _jsxFileName = \"/Users/durgasrivatsan/Documents/UPENN/Junior Fall/CIS 550/airbnb-explorer/client/src/components/Host.js\";\nimport React from 'react';\nimport PageNavbar from './PageNavbar';\nimport ListingRow from './ListingRow';\nimport '../style/Zipcode.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useParams } from \"react-router\";\nexport default class Host extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hostId: props,\n      allHosts: [],\n      listings: []\n    };\n    this.submitHostId = this.submitHostId.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  /* ---- Q3a (Best Genres) ---- */\n\n\n  submitHostId() {\n    fetch(\"http://localhost:8081/getHost\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => res.json()) // Convert the response data to a JSON.\n    .then(hostList => {\n      // Map each attribute of a person in this.state.people to an HTML element\n      let hostDivs = hostList.map((host, i) => [/*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: host.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 4\n        }\n      }, host.id)]); // Set the state of the person list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        allHosts: hostDivs\n      });\n    }).catch(err => console.log(err));\n  }\n\n  handleChange(e) {\n    this.setState({\n      hostId: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    console.log(\"HELLO\");\n    console.log(this.props.match.params.hostId);\n    console.log(this.state.hostId);\n    /*\t\tfetch(\"http://localhost:8081/getHost/\" + this.state.hostId, {\n    \t  method: 'GET' // The type of HTTP request.\n    \t})\n    \t  .then(res => res.json()) // Convert the response data to a JSON.\n    \t  .then(hostList => {\n    \t\tconsole.log(hostList);\n    \t\n    \t\t// Map each attribute of a person in this.state.people to an HTML element\n    \t\tlet hostDivs = hostList.map((host, i) => \n    \t\t  <ListingRow key={i} listing_id={host.listing_id} price={host.price} summary={host.summary}\n    \t\t  />\n    \t\n    \t\t);\n    \t\tconsole.log(hostDivs);\n    \t\t// Set the state of the person list to the value returned by the HTTP response from the server.\n    \t\tthis.setState({\n    \t\t  listings: hostDivs,\n    \t\t})\n    \t  \n    \t  })\n    \t  .catch(err => console.log(err))\n    \t  \t<option select value> -- select an option -- </option>\n    \t\t\t            \t{this.state.allHosts} */\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Zipcode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(PageNavbar, {\n      active: \"host\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container bestgenres-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }\n    }, \"Get Host's Listings\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"years-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dropdown-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.submitHostId,\n      onChange: this.handleChange,\n      className: \"dropdown\",\n      id: \"zipcodesDropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit-btn\",\n      id: \"zipcodesSubmitBtn\",\n      onClick: this.submitHostId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 16\n      }\n    }, \"Submit\")))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hosts-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }, \"Listing_ID\")), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 49\n      }\n    }, \"Price\")), /*#__PURE__*/React.createElement(\"th\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 40\n      }\n    }, \"Summary\"))), this.state.listings)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/durgasrivatsan/Documents/UPENN/Junior Fall/CIS 550/airbnb-explorer/client/src/components/Host.js"],"names":["React","PageNavbar","ListingRow","useParams","Host","Component","constructor","props","state","hostId","allHosts","listings","submitHostId","bind","handleChange","fetch","method","then","res","json","hostList","hostDivs","map","host","i","id","setState","catch","err","console","log","e","target","value","componentDidMount","match","params","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PageNavbar from './PageNavbar';\nimport ListingRow from './ListingRow';\nimport '../style/Zipcode.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useParams } from \"react-router\"; \nexport default class Host extends React.Component {\n\tconstructor(props) { \n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thostId: props,\n\t\t\tallHosts: [],\n\t\t\tlistings: []\n\t\t};\n\n\t\tthis.submitHostId = this.submitHostId.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t}\n\n\t/* ---- Q3a (Best Genres) ---- */\n\tsubmitHostId() {\n\t\tfetch(\"http://localhost:8081/getHost\", {\n      method: 'GET' // The type of HTTP request.\n    })\n      .then(res => res.json()) // Convert the response data to a JSON.\n      .then(hostList => {\n\n        // Map each attribute of a person in this.state.people to an HTML element\n        let hostDivs = hostList.map((host, i) => \n\t\t[<option key={i} value={host.id}>{host.id}</option>]\n\n        );\n        // Set the state of the person list to the value returned by the HTTP response from the server.\n        this.setState({\n          allHosts: hostDivs,\n        })\n      \n      })\n      .catch(err => console.log(err))\n    \n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({\n\t\t\thostId: e.target.value\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tconsole.log(\"HELLO\"); \n\t\tconsole.log(this.props.match.params.hostId);\n\t\tconsole.log(this.state.hostId); \n/*\t\tfetch(\"http://localhost:8081/getHost/\" + this.state.hostId, {\n\t  method: 'GET' // The type of HTTP request.\n\t})\n\t  .then(res => res.json()) // Convert the response data to a JSON.\n\t  .then(hostList => {\n\t\tconsole.log(hostList);\n\t\n\t\t// Map each attribute of a person in this.state.people to an HTML element\n\t\tlet hostDivs = hostList.map((host, i) => \n\t\t  <ListingRow key={i} listing_id={host.listing_id} price={host.price} summary={host.summary}\n\t\t  />\n\t\n\t\t);\n\t\tconsole.log(hostDivs);\n\t\t// Set the state of the person list to the value returned by the HTTP response from the server.\n\t\tthis.setState({\n\t\t  listings: hostDivs,\n\t\t})\n\t  \n\t  })\n\t  .catch(err => console.log(err))\n\t  \t<option select value> -- select an option -- </option>\n\t\t\t            \t{this.state.allHosts} */\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className=\"Zipcode\">\n\t\t\t\t<PageNavbar active=\"host\" />\n\n\t\t\t\t<div className=\"container bestgenres-container\">\n\t\t\t      <div className=\"jumbotron\">\n\t\t\t        <div className=\"h5\">Get Host's Listings</div>\n\n\t\t\t        <div className=\"years-container\">\n\t\t\t          <div className=\"dropdown-container\">\n\t\t\t            <select value={this.state.submitHostId} onChange={this.handleChange} className=\"dropdown\" id=\"zipcodesDropdown\">\n\t\t\t            \n\t\t\t            </select>\n\t\t\t            <button className=\"submit-btn\" id=\"zipcodesSubmitBtn\" onClick={this.submitHostId}>Submit</button>\n\t\t\t          </div>\n\t\t\t        </div>\n\t\t\t      </div>\n\t\t\t      <div className=\"jumbotron\">\n\t\t\t        <div className=\"hosts-container\">\n\t\t\t\t\t\t  <table>\n\t\t\t\t\t\t\t  <tr>\n\t\t\t\t\t\t\t  <th className=\"header\"><strong>Listing_ID</strong></th>\n                        \t<th className=\"header\"><strong>Price</strong></th>\n\t\t\t            \t<th className=\"header\"><strong>Summary</strong></th>\n\t\t\t\t\t\t\t  </tr>\n\t\t\t\t\t\t\t  {this.state.listings}\n\t\t\t\t\t\t  </table>\n\t\t\t        </div>\n\t\t\t      </div>\n\t\t\t    </div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}